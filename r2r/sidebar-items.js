initSidebarItems({"enum":[["ClockType","Different ROS clock types."],["Error","r2r Error type."],["GoalStatus","The status of a goal."],["LogSeverity","Logging severity"],["ParameterValue","ROS parameter value."]],"externcrate":[["uuid",""]],"macro":[["log_debug","Debug log message."],["log_debug","Debug log message."],["log_error","Error log message."],["log_error","Error log message."],["log_fatal","Fatal log message."],["log_fatal","Fatal log message."],["log_info","Info log message."],["log_info","Info log message."],["log_warn","Warning log message."],["log_warn","Warning log message."]],"mod":[["action_msgs",""],["action_tutorials_interfaces",""],["actionlib_msgs",""],["builtin_interfaces",""],["composition_interfaces",""],["diagnostic_msgs",""],["example_interfaces",""],["geometry_msgs",""],["lifecycle_msgs",""],["logging_demo",""],["map_msgs",""],["nav_msgs",""],["pendulum_msgs",""],["qos","QoS (Quality of Service) full credit goes to https://github.com/rclrust/rclrust/blob/main/rclrust/src/qos.rs"],["rcl_interfaces",""],["rmw_dds_common",""],["ros2cli_test_interfaces",""],["rosbag2_interfaces",""],["rosgraph_msgs",""],["sensor_msgs",""],["shape_msgs",""],["statistics_msgs",""],["std_msgs",""],["std_srvs",""],["stereo_msgs",""],["test_msgs",""],["tf2_msgs",""],["trajectory_msgs",""],["turtlesim",""],["unique_identifier_msgs",""],["visualization_msgs",""]],"struct":[["ActionClient","Action client"],["ActionClientGoal","Action client goal handle"],["ActionClientGoalUntyped","Action client goal handle (untyped)"],["ActionClientUntyped","Action client (untyped)"],["ActionServerCancelRequest","Request to cancel an active goal."],["ActionServerGoal","A handle to an active `Goal`"],["ActionServerGoalRequest","Request to the action server to accept a new `Goal`."],["Client","ROS service client."],["ClientUntyped","ROS “untyped” service client."],["Clock","A ROS clock."],["Context","A ROS context. Needed to create nodes etc."],["NativeMsg","This struct wraps a RCL message."],["Node","A ROS Node."],["Publisher","A ROS (typed) publisher."],["PublisherUntyped","A ROS (untyped) publisher."],["ServiceRequest","Encapsulates a service request."],["Timer","A ROS timer."]],"type":[["Result","r2r Result type."]]});